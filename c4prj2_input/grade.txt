Grading at Mon Sep 24 17:45:08 UTC 2018
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1339== Memcheck, a memory error detector
==1339== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1339== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1339== Command: ./tester h.txt d.txt
==1339== Parent PID: 1338
==1339== 
==1339== Conditional jump or move depends on uninitialised value(s)
==1339==    at 0x400EE2: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1339==    by 0x400C41: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1339==    by 0x400DEC: read_input (in /graderhome/work/c4prj2_input/tester)
==1339==    by 0x401B4B: main (test-input.c:69)
==1339== 
==1339== 
==1339== HEAP SUMMARY:
==1339==     in use at exit: 32 bytes in 4 blocks
==1339==   total heap usage: 124 allocs, 120 frees, 16,176 bytes allocated
==1339== 
==1339== LEAK SUMMARY:
==1339==    definitely lost: 32 bytes in 4 blocks
==1339==    indirectly lost: 0 bytes in 0 blocks
==1339==      possibly lost: 0 bytes in 0 blocks
==1339==    still reachable: 0 bytes in 0 blocks
==1339==         suppressed: 0 bytes in 0 blocks
==1339== Rerun with --leak-check=full to see details of leaked memory
==1339== 
==1339== For counts of detected and suppressed errors, rerun with: -v
==1339== Use --track-origins=yes to see where uninitialised values come from
==1339== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1345== Memcheck, a memory error detector
==1345== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1345== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1345== Command: ./tester i1 i2
==1345== Parent PID: 1344
==1345== 
==1345== Conditional jump or move depends on uninitialised value(s)
==1345==    at 0x400EE2: add_future_card (in /graderhome/work/c4prj2_input/tester)
==1345==    by 0x400C41: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1345==    by 0x400DEC: read_input (in /graderhome/work/c4prj2_input/tester)
==1345==    by 0x401B4B: main (test-input.c:69)
==1345== 
==1345== 
==1345== HEAP SUMMARY:
==1345==     in use at exit: 232 bytes in 29 blocks
==1345==   total heap usage: 324 allocs, 295 frees, 24,776 bytes allocated
==1345== 
==1345== LEAK SUMMARY:
==1345==    definitely lost: 232 bytes in 29 blocks
==1345==    indirectly lost: 0 bytes in 0 blocks
==1345==      possibly lost: 0 bytes in 0 blocks
==1345==    still reachable: 0 bytes in 0 blocks
==1345==         suppressed: 0 bytes in 0 blocks
==1345== Rerun with --leak-check=full to see details of leaked memory
==1345== 
==1345== For counts of detected and suppressed errors, rerun with: -v
==1345== Use --track-origins=yes to see where uninitialised values come from
==1345== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
