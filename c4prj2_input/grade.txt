Grading at Thu Sep 20 21:23:38 UTC 2018
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==940== Memcheck, a memory error detector
==940== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==940== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==940== Command: ./tester hands.txt draw.txt
==940== Parent PID: 939
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C2DB3C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x401AAD: main (test-input.c:69)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401268: add_card_to (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x401AAD: main (test-input.c:69)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401285: add_card_to (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x401AAD: main (test-input.c:69)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C2FD15: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x401AAD: main (test-input.c:69)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x400CF5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x401AAD: main (test-input.c:69)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x401034: print_hand (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x401BC8: main (test-input.c:84)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E73306: qsort_r (msort.c:175)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E7368A: msort_with_tmp (msort.c:45)
==940==    by 0x4E7368A: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E7369A: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369A: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==940==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==940==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401958: my_card_ptr_comp (test-input.c:45)
==940==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401963: my_card_ptr_comp (test-input.c:46)
==940==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E73236: msort_with_tmp.part.0 (msort.c:85)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B23: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B31: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32CD8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401963: my_card_ptr_comp (test-input.c:46)
==940==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B23: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B31: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==940==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==940==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401958: my_card_ptr_comp (test-input.c:45)
==940==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401963: my_card_ptr_comp (test-input.c:46)
==940==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E73200: msort_with_tmp.part.0 (msort.c:91)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E7321E: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32DDC: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B8F: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32BA5: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32CD8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32CDD: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B23: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B31: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32CD8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==940==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==940==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401958: my_card_ptr_comp (test-input.c:45)
==940==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x401963: my_card_ptr_comp (test-input.c:46)
==940==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E73200: msort_with_tmp.part.0 (msort.c:91)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E7321E: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==940==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== 
==940== More than 100 errors detected.  Subsequent errors
==940== will still be recorded, but in less detail than before.
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E7321E: msort_with_tmp.part.0 (msort.c:81)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B23: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B31: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Use of uninitialised value of size 8
==940==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==940==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==940==    by 0x4E7369E: qsort_r (msort.c:297)
==940==    by 0x4019CC: my_sort_deck (test-input.c:53)
==940==    by 0x401BE6: main (test-input.c:85)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x401034: print_hand (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x401C13: main (test-input.c:87)
==940== 
==940== Conditional jump or move depends on uninitialised value(s)
==940==    at 0x401484: free_deck (in /graderhome/work/c4prj2_input/tester)
==940==    by 0x401CB2: main (test-input.c:100)
==940== 
==940== 
==940== HEAP SUMMARY:
==940==     in use at exit: 0 bytes in 0 blocks
==940==   total heap usage: 29 allocs, 29 frees, 14,120 bytes allocated
==940== 
==940== All heap blocks were freed -- no leaks are possible
==940== 
==940== For counts of detected and suppressed errors, rerun with: -v
==940== Use --track-origins=yes to see where uninitialised values come from
==940== ERROR SUMMARY: 224 errors from 118 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==945== Memcheck, a memory error detector
==945== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==945== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==945== Command: ./tester hands.txt draw.txt
==945== Parent PID: 944
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C2DB3C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x401AAD: main (test-input.c:69)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x401268: add_card_to (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x401AAD: main (test-input.c:69)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x401285: add_card_to (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x401AAD: main (test-input.c:69)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C2FD15: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x401AAD: main (test-input.c:69)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x400CF5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x401AAD: main (test-input.c:69)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x401034: print_hand (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x401BC8: main (test-input.c:84)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E73306: qsort_r (msort.c:175)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E7368A: msort_with_tmp (msort.c:45)
==945==    by 0x4E7368A: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E7369A: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369A: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==945==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==945==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x401958: my_card_ptr_comp (test-input.c:45)
==945==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x401963: my_card_ptr_comp (test-input.c:46)
==945==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E73200: msort_with_tmp.part.0 (msort.c:91)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E7321E: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32DDC: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B8F: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32BA5: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32CD8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32CDD: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B23: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B31: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32CD8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x401963: my_card_ptr_comp (test-input.c:46)
==945==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E73200: msort_with_tmp.part.0 (msort.c:91)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E7321E: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32DDC: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32BA5: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B23: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B31: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==945==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72EBA: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EBA: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E72ECB: msort_with_tmp (msort.c:45)
==945==    by 0x4E72ECB: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x401958: my_card_ptr_comp (test-input.c:45)
==945==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x401963: my_card_ptr_comp (test-input.c:46)
==945==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E73200: msort_with_tmp.part.0 (msort.c:91)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E7321E: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32DDC: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B8F: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32BA5: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32CD8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32CDD: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E731DB: msort_with_tmp.part.0 (msort.c:159)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B23: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== 
==945== More than 100 errors detected.  Subsequent errors
==945== will still be recorded, but in less detail than before.
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32CD8: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E73236: msort_with_tmp.part.0 (msort.c:85)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E731EB: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E731F9: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E7320B: msort_with_tmp.part.0 (msort.c:92)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E73215: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E7321E: msort_with_tmp.part.0 (msort.c:81)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4E730E3: msort_with_tmp.part.0 (msort.c:158)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B03: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B1D: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B23: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B31: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32B7E: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32E0C: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D28: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4C32D2B: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D36: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x4C32D47: __GI_memcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x401034: print_hand (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x401C13: main (test-input.c:87)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E73236: msort_with_tmp.part.0 (msort.c:85)
==945==    by 0x4E72EC6: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EC6: msort_with_tmp.part.0 (msort.c:53)
==945==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==945==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Use of uninitialised value of size 8
==945==    at 0x4E73200: msort_with_tmp.part.0 (msort.c:91)
==945==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==945==    by 0x4E7369E: qsort_r (msort.c:297)
==945==    by 0x4019CC: my_sort_deck (test-input.c:53)
==945==    by 0x401BE6: main (test-input.c:85)
==945== 
==945== Conditional jump or move depends on uninitialised value(s)
==945==    at 0x401484: free_deck (in /graderhome/work/c4prj2_input/tester)
==945==    by 0x401CB2: main (test-input.c:100)
==945== 
==945== 
==945== HEAP SUMMARY:
==945==     in use at exit: 0 bytes in 0 blocks
==945==   total heap usage: 80 allocs, 80 frees, 15,512 bytes allocated
==945== 
==945== All heap blocks were freed -- no leaks are possible
==945== 
==945== For counts of detected and suppressed errors, rerun with: -v
==945== Use --track-origins=yes to see where uninitialised values come from
==945== ERROR SUMMARY: 982 errors from 122 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==951== Memcheck, a memory error detector
==951== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==951== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==951== Command: ./tester h.txt d.txt
==951== Parent PID: 950
==951== 
==951== Conditional jump or move depends on uninitialised value(s)
==951==    at 0x4C2DB3C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==951==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==951==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951== 
==951== Use of uninitialised value of size 8
==951==    at 0x401268: add_card_to (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951== 
==951== Use of uninitialised value of size 8
==951==    at 0x401285: add_card_to (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951== 
==951== Conditional jump or move depends on uninitialised value(s)
==951==    at 0x4C2FD15: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==951==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951== 
==951== Conditional jump or move depends on uninitialised value(s)
==951==    at 0x4C2FD15: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==951==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x4012C3: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400C19: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951== 
==951== Use of uninitialised value of size 8
==951==    at 0x401268: add_card_to (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x4012C3: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400C19: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951== 
==951== Use of uninitialised value of size 8
==951==    at 0x401285: add_card_to (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x4012C3: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400C19: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951== 
==951== Use of uninitialised value of size 8
==951==    at 0x4012DE: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400C19: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951== 
==951== Invalid write of size 8
==951==    at 0x400E8D: add_future_card (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400C34: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==951== 
==951== 
==951== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==951==  Access not within mapped region at address 0x0
==951==    at 0x400E8D: add_future_card (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400C34: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==951==    by 0x401AAD: main (test-input.c:69)
==951==  If you believe this happened as a result of a stack
==951==  overflow in your program's main thread (unlikely but
==951==  possible), you can try to increase the size of the
==951==  main thread stack using the --main-stacksize= flag.
==951==  The main thread stack size used in this run was 8388608.
==951== 
==951== HEAP SUMMARY:
==951==     in use at exit: 816 bytes in 12 blocks
==951==   total heap usage: 20 allocs, 8 frees, 5,096 bytes allocated
==951== 
==951== LEAK SUMMARY:
==951==    definitely lost: 0 bytes in 0 blocks
==951==    indirectly lost: 0 bytes in 0 blocks
==951==      possibly lost: 0 bytes in 0 blocks
==951==    still reachable: 816 bytes in 12 blocks
==951==         suppressed: 0 bytes in 0 blocks
==951== Rerun with --leak-check=full to see details of leaked memory
==951== 
==951== For counts of detected and suppressed errors, rerun with: -v
==951== Use --track-origins=yes to see where uninitialised values come from
==951== ERROR SUMMARY: 23 errors from 9 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==957== Memcheck, a memory error detector
==957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==957== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==957== Command: ./tester i1 i2
==957== Parent PID: 956
==957== 
==957== Conditional jump or move depends on uninitialised value(s)
==957==    at 0x4C2DB3C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==957==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==957==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957== 
==957== Use of uninitialised value of size 8
==957==    at 0x401268: add_card_to (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957== 
==957== Use of uninitialised value of size 8
==957==    at 0x401285: add_card_to (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957== 
==957== Conditional jump or move depends on uninitialised value(s)
==957==    at 0x4C2FD15: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==957==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400CB5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957== 
==957== Conditional jump or move depends on uninitialised value(s)
==957==    at 0x4C2FD15: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==957==    by 0x401238: add_card_to (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x4012C3: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400C19: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957== 
==957== Use of uninitialised value of size 8
==957==    at 0x401268: add_card_to (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x4012C3: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400C19: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957== 
==957== Use of uninitialised value of size 8
==957==    at 0x401285: add_card_to (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x4012C3: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400C19: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957== 
==957== Use of uninitialised value of size 8
==957==    at 0x4012DE: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400C19: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957== 
==957== Invalid write of size 8
==957==    at 0x400E8D: add_future_card (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400C34: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==957== 
==957== 
==957== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==957==  Access not within mapped region at address 0x0
==957==    at 0x400E8D: add_future_card (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400C34: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x400DE1: read_input (in /graderhome/work/c4prj2_input/tester)
==957==    by 0x401AAD: main (test-input.c:69)
==957==  If you believe this happened as a result of a stack
==957==  overflow in your program's main thread (unlikely but
==957==  possible), you can try to increase the size of the
==957==  main thread stack using the --main-stacksize= flag.
==957==  The main thread stack size used in this run was 8388608.
==957== 
==957== HEAP SUMMARY:
==957==     in use at exit: 768 bytes in 9 blocks
==957==   total heap usage: 14 allocs, 5 frees, 4,928 bytes allocated
==957== 
==957== LEAK SUMMARY:
==957==    definitely lost: 0 bytes in 0 blocks
==957==    indirectly lost: 0 bytes in 0 blocks
==957==      possibly lost: 0 bytes in 0 blocks
==957==    still reachable: 768 bytes in 9 blocks
==957==         suppressed: 0 bytes in 0 blocks
==957== Rerun with --leak-check=full to see details of leaked memory
==957== 
==957== For counts of detected and suppressed errors, rerun with: -v
==957== Use --track-origins=yes to see where uninitialised values come from
==957== ERROR SUMMARY: 14 errors from 9 contexts (suppressed: 0 from 0)

Overall Grade: F
