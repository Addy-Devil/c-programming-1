Grading at Sat Sep  1 01:28:09 UTC 2018
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
- Test passed
Testing add_empty_card(deck_t *)
- Test passed
Testing make_deck_exclude(deck_t *)
- Test passed
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
Testing with 2 hands
Testing with 3 hands
Testing with 4 hands
Testing with 5 hands
Testing with 6 hands
- Test passed
Testing get_match_count(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==3320== Memcheck, a memory error detector
==3320== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3320== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3320== Command: ./tester gmc
==3320== Parent PID: 3319
==3320== 
==3320== Invalid read of size 8
==3320==    at 0x401532: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==3320==    by 0x402F19: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==3320==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==3320==  Address 0x52040e8 is 0 bytes after a block of size 8 alloc'd
==3320==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3320==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3320==    by 0x402DC6: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==3320==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==3320== 
==3320== Invalid read of size 4
==3320==    at 0x401535: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==3320==    by 0x402F19: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==3320==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==3320==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3320== 
==3320== 
==3320== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3320==  Access not within mapped region at address 0x0
==3320==    at 0x401535: get_match_counts (in /graderhome/work/c4prj1_deck/tester)
==3320==    by 0x402F19: check_get_match_count (in /graderhome/work/c4prj1_deck/tester)
==3320==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==3320==  If you believe this happened as a result of a stack
==3320==  overflow in your program's main thread (unlikely but
==3320==  possible), you can try to increase the size of the
==3320==  main thread stack using the --main-stacksize= flag.
==3320==  The main thread stack size used in this run was 8388608.
==3320== 
==3320== HEAP SUMMARY:
==3320==     in use at exit: 72 bytes in 8 blocks
==3320==   total heap usage: 8 allocs, 0 frees, 72 bytes allocated
==3320== 
==3320== LEAK SUMMARY:
==3320==    definitely lost: 4 bytes in 1 blocks
==3320==    indirectly lost: 0 bytes in 0 blocks
==3320==      possibly lost: 0 bytes in 0 blocks
==3320==    still reachable: 68 bytes in 7 blocks
==3320==         suppressed: 0 bytes in 0 blocks
==3320== Rerun with --leak-check=full to see details of leaked memory
==3320== 
==3320== For counts of detected and suppressed errors, rerun with: -v
==3320== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: B
